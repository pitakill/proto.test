{
  "files": [
    {
      "name": "calculator/v1/calculator.proto",
      "description": "",
      "package": "calculator.v1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": false,
      "hasServices": false,
      "enums": [
        {
          "name": "Error",
          "longName": "Error",
          "fullName": "calculator.v1.Error",
          "description": "",
          "values": [
            {
              "name": "ERROR_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "ERROR_WRONG_OPERATION",
              "number": "1",
              "description": ""
            },
            {
              "name": "ERROR_DIVISION_BY_ZERO",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "Operation",
          "longName": "Operation",
          "fullName": "calculator.v1.Operation",
          "description": "",
          "values": [
            {
              "name": "OPERATION_UNSPECIFIED",
              "number": "0",
              "description": ""
            },
            {
              "name": "OPERATION_ADDITION",
              "number": "1",
              "description": ""
            },
            {
              "name": "OPERATION_SUBTRACTION",
              "number": "2",
              "description": ""
            },
            {
              "name": "OPERATION_MULTIPLICATION",
              "number": "3",
              "description": ""
            },
            {
              "name": "OPERATION_DIVISION",
              "number": "4",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [],
      "services": []
    },
    {
      "name": "services/calculate/v1/calculate.proto",
      "description": "",
      "package": "services.calculate.v1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AdditionRequest",
          "longName": "AdditionRequest",
          "fullName": "services.calculate.v1.AdditionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "operation",
              "description": "",
              "label": "",
              "type": "Operation",
              "longType": "calculator.v1.Operation",
              "fullType": "calculator.v1.Operation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "operator_first",
              "description": "",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "operator_second",
              "description": "",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "map",
              "description": "",
              "label": "",
              "type": "Struct",
              "longType": "google.protobuf.Struct",
              "fullType": "google.protobuf.Struct",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AdditionResponse",
          "longName": "AdditionResponse",
          "fullName": "services.calculate.v1.AdditionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "result",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AdditionsRequest",
          "longName": "AdditionsRequest",
          "fullName": "services.calculate.v1.AdditionsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "operation",
              "description": "",
              "label": "",
              "type": "Operation",
              "longType": "calculator.v1.Operation",
              "fullType": "calculator.v1.Operation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "operator_first",
              "description": "",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "operator_second",
              "description": "",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AdditionsResponse",
          "longName": "AdditionsResponse",
          "fullName": "services.calculate.v1.AdditionsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "result",
              "description": "",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "errors",
              "description": "",
              "label": "repeated",
              "type": "ErrorsEntry",
              "longType": "AdditionsResponse.ErrorsEntry",
              "fullType": "services.calculate.v1.AdditionsResponse.ErrorsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ErrorsEntry",
          "longName": "AdditionsResponse.ErrorsEntry",
          "fullName": "services.calculate.v1.AdditionsResponse.ErrorsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Error",
              "longType": "calculator.v1.Error",
              "fullType": "calculator.v1.Error",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DivisionRequest",
          "longName": "DivisionRequest",
          "fullName": "services.calculate.v1.DivisionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "operation",
              "description": "",
              "label": "",
              "type": "Operation",
              "longType": "calculator.v1.Operation",
              "fullType": "calculator.v1.Operation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "operator_first",
              "description": "",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "operator_second",
              "description": "",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DivisionResponse",
          "longName": "DivisionResponse",
          "fullName": "services.calculate.v1.DivisionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "result",
              "description": "",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "CalculateService",
          "longName": "CalculateService",
          "fullName": "services.calculate.v1.CalculateService",
          "description": "",
          "methods": [
            {
              "name": "Addition",
              "description": "",
              "requestType": "AdditionRequest",
              "requestLongType": "AdditionRequest",
              "requestFullType": "services.calculate.v1.AdditionRequest",
              "requestStreaming": false,
              "responseType": "AdditionResponse",
              "responseLongType": "AdditionResponse",
              "responseFullType": "services.calculate.v1.AdditionResponse",
              "responseStreaming": false
            },
            {
              "name": "Division",
              "description": "",
              "requestType": "DivisionRequest",
              "requestLongType": "DivisionRequest",
              "requestFullType": "services.calculate.v1.DivisionRequest",
              "requestStreaming": false,
              "responseType": "DivisionResponse",
              "responseLongType": "DivisionResponse",
              "responseFullType": "services.calculate.v1.DivisionResponse",
              "responseStreaming": false
            },
            {
              "name": "Additions",
              "description": "",
              "requestType": "AdditionsRequest",
              "requestLongType": "AdditionsRequest",
              "requestFullType": "services.calculate.v1.AdditionsRequest",
              "requestStreaming": true,
              "responseType": "AdditionsResponse",
              "responseLongType": "AdditionsResponse",
              "responseFullType": "services.calculate.v1.AdditionsResponse",
              "responseStreaming": true
            }
          ]
        }
      ]
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}